-- Quartus II VHDL Template
-- Basic Shift Register

library ieee;
use ieee.std_logic_1164.all;

entity topFile is

	generic
	(
		NUM_STAGES : integer := 50000000
	);

	port 
	(
		clk		: in std_logic;
		reset	: in std_logic;
		led_out	: out std_logic_vector(2 downto 0);
	);

end entity;

architecture topFileArch of topFile is

	    signal current_timer, next_timer : integer := 0;   -- Estados de tempo atual e próximo tempo
		 signal led : std_logic_vector(2 downto 0):="000";
begin
    

    memory_element :
        process(clock)
        begin
				if reset = '1' then
					current_timer <= 0;
            elsif rising_edge(clock) then
                current_timer <= next_timer;
            end if;
        end process;
    
    -- Sempre soma 1 no next_timer até chegar ao máximo e zerar
    next_state_logic : 
        next_timer <= 0 when (current_timer = max_value_counter) else
                      current_timer + 1;
    
    changeLed;
	 process(clock)
	 begin
			if reset = '1' then
					led <= "000";
         elsif rising_edge(clock) then
                led <= not(led);
         end if;
	end process;
	led_out <= led; 
	 

end topFileArch;
